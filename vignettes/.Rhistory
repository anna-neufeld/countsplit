myDensies <- sapply(Ks, myDens, p=p)
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
sum <- sum +  factorial(x)/factorial(k)*factorial(x+r-k-2)/factorial(x+r-1)*xprob
x <- x+1
}
return(sum)
}
p=0.3
Ks <- 1:10
myDensies <- sapply(Ks, myDens, p=p)
plot(myDensies, dnbinom(Ks,size=1,prob=p))
p=0.3
Ks <- 1:10
myDensies <- sapply(Ks, myDens, r=r, p=p)
p=0.3
r=4
Ks <- 1:10
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=1,prob=p))
abline(0,1, col="red")
hist(rnbinom(1000,r,p))
Ks <- 1:30
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=r,prob=p))
abline(0,1, col="red")
p=0.3
r=4
hist(rnbinom(1000,r,p))
Ks <- 1:30
myDensies <- sapply(Ks, myDens, r=r, p=p)
max(myDensies)
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
sum <- sum +  factorial(x)*factorial(x+r-k-2)/(factorial(x+r-1)*factorial(k))*xprob
x <- x+1
}
return(sum)
}
p=0.3
r=4
hist(rnbinom(1000,r,p))
Ks <- 1:30
myDensies <- sapply(Ks, myDens, r=r, p=p)
max(myDensies)
factorial(x)/factorial(k)
x
k
product((x):(x+r-1))
prod((x):(x+r-1))
prody <- factorial(k)/prod((x):(x+r-1))
prody
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
prody <- factorial(k)/prod((x):(x+r-1))
sum <- sum + prody*factorial(x+r-k-2)*xprob
x <- x+1
}
return(sum)
}
p=0.3
r=4
hist(rnbinom(1000,r,p))
Ks <- 1:30
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=r,prob=p))
max(myDensies)
which(myDensies > )
which(myDensies > 1)
head(myDensies)
prody <- factorial(k)/prod((x):(x+r-1))
prody
factorial(x+r-k-2)
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
prody <- prod((x):(x+r-1))
sum <- sum + prody*factorial(x+r-k-2)*xprob/factorial(k)
x <- x+1
}
return(sum)
}
p=0.3
r=4
hist(rnbinom(1000,r,p))
Ks <- 1:30
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=r,prob=p))
abline(0,1, col="red")
myDensies
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
prody <- 1/prod((x):(x+r-1))
sum <- sum + prody*factorial(x+r-k-2)*xprob/factorial(k)
x <- x+1
}
return(sum)
}
p=0.3
r=4
hist(rnbinom(1000,r,p))
Ks <- 1:30
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=r,prob=p))
abline(0,1, col="red")
myDensies
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
prody <- 1/prod((x):(x+r-1))
sum <- sum + prody*factorial(x+r-k-2)*xprob/factorial(k)
x <- x+1
}
return(sum)
}
k=5
r=4
p=0.4
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
prody <- 1/prod((x):(x+r-1))
sum <- sum + prody*factorial(x+r-k-2)*xprob/factorial(k)
x <- x+1
}
x
sum
prody
factorial(x+r-k-2)/factorial(k)
factorial(x)*factorial(x+r-k-2)/(factorial(k)*factorial(x+r-1))
(factorial(x)*factorial(x+r-k-2))/(factorial(k)*factorial(x+r-1))
x_r-k-2
x+r-k-2
x_r-1
x+r-1
factorial(x)/factorial(k)
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
prody <- 1/prod((x):(x+r-1))
sum <- sum + prody*factorial(x+r-k-2)*xprob/factorial(x-k)
x <- x+1
}
return(sum)
(factorial(x)*factorial(x+r-k-2))/(factorial(k)*factorial(x+r-1))
}
p=0.3
r=4
hist(rnbinom(1000,r,p))
Ks <- 1:30
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=r,prob=p))
abline(0,1, col="red")
p=0.3
r=4
hist(rnbinom(1000,r,p))
Ks <- 1:30
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=1,prob=p))
abline(0,1, col="red")
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
prody <- 1/prod((x):(x+r-1))
sum <- sum + prody*factorial(x+r-k-2)*xprob/factorial(x-k)
x <- x+1
}
return(sum)
}
p=0.3
r=4
hist(rnbinom(1000,r,p))
Ks <- 1:30
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=1,prob=p))
abline(0,1, col="red")
sum(myDensies)
sum(dnbinom(Ks,size=1,prob=p))
Ks <- 1:50
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=1,prob=p))
abline(0,1, col="red")
sum(myDensies)
sum(dnbinom(Ks,size=1,prob=p))
sum(dnbinom(1:100,size=1,prob=p))
sum(dnbinom(1:200,size=1,prob=p))
range(rnbinom(10000,1,p))
Ks <- 0:50
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=1,prob=p))
abline(0,1, col="red")
sum(dnbinom(Ks,size=1,prob=p))
sum(myDensies)
head(myDensies)
k=0
sum=0
x =k
xprob=1
xprob <- dnbinom(x,size=r, prob=p)
xprob
prody <- 1/prod((x):(x+r-1))
prody
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
if (x==0) {
prody <- 1/prod((1):(x+r-1))
} else {
prody <- 1/prod((x):(x+r-1))
}
sum <- sum + prody*factorial(x+r-k-2)*xprob/factorial(x-k)
x <- x+1
}
return(sum)
}
p=0.3
r=4
hist(rnbinom(1000,r,p))
Ks <- 0:30
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=1,prob=p))
abline(0,1, col="red")
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
if (x==0) {
prody <- 1/prod((1):(x+r-1))
} else {
prody <- 1/prod((x):(x+r-1))
}
sum <- sum + prody*factorial(x+r-k-2)*xprob/factorial(x-k+1)
x <- x+1
}
return(sum)
}
p=0.3
r=4
hist(rnbinom(1000,r,p))
Ks <- 0:30
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=1,prob=p))
abline(0,1, col="red")
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
prody <- (factorial(x)/factorial(k)*factorial(x+r-k-2))/factorial(x+r-1)
print(prody)
sum <- sum + prody*xprob
x <- x+1
}
return(sum)
}
myDens(k,r,p)
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
prody <- (factorial(x)/factorial(x-k)*factorial(x+r-k-2))/factorial(x+r-1)
print(prody)
sum <- sum + prody*xprob
x <- x+1
}
return(sum)
}
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
prody <- (factorial(x)/factorial(x-k)*factorial(x+r-k-2))/factorial(x+r-1)
print(prody)
sum <- sum + prody*xprob
x <- x+1
}
return(sum)
}
myDens(k,r,p)
p=0.3
r=4
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
prody <- (factorial(x)/factorial(x-k)*factorial(x+r-k-2))/factorial(x+r-1)
print(prody)
sum <- sum + prody*xprob
x <- x+1
}
return(sum)
}
p=0.3
r=4
hist(rnbinom(1000,r,p))
Ks <- 0:30
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=1,prob=p))
abline(0,1, col="red")
sum(myDensies)
sum(dnbinom(Ks,size=1,prob=p))
splitFunc <- function(X,b,b1=floor(b/2)) {
perm <- sample(c(rep(1,X), rep(0,b-1)))
indices <- which(perm==0)
splitPoint <- indices[b1]
return(sum(perm[1:splitPoint]))
}
X <- rnbinom(10000, size=4, prob=0.4)
Xtrain <- sapply(X, splitFunc, b=4, b1=1)
Xtest <- X-Xtrain
par(mfrow=c(3,1))
hist(X, breaks=0:max(X), freq=FALSE, right=FALSE)
points(0:max(X), dnbinom(0:max(X),size=4,prob=0.4), col="red", type='b')
hist(Xtrain, breaks=0:max(X), freq=FALSE, right=FALSE)
points(0:max(X), dnbinom(0:max(X),size=1,prob=0.4), col="red", type='b')
hist(Xtest, breaks=0:max(X), freq=FALSE, right=FALSE)
points(0:max(X), dnbinom(0:max(X),size=3,prob=0.4), col="red", type='b')
cor(Xtrain, Xtest)
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
prody <- (factorial(x)/factorial(x-k))*factorial(x+r-k-2)/factorial(x+r-1)
print(prody)
sum <- sum + prody*xprob
x <- x+1
}
return(sum)
}
p=0.3
r=4
hist(rnbinom(1000,r,p))
Ks <- 0:30
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=1,prob=p))
abline(0,1, col="red")
splitFunc <- function(X,b,b1=floor(b/2)) {
perm <- sample(c(rep(1,X), rep(0,b-1)))
indices <- which(perm==0)
splitPoint <- indices[b1]
return(sum(perm[1:splitPoint]))
}
X <- rnbinom(10000, size=4, prob=0.4)
Xtrain <- sapply(X, splitFunc, b=4, b1=1)
Xtest <- X-Xtrain
par(mfrow=c(3,1))
hist(X, breaks=0:max(X), freq=FALSE, right=FALSE)
points(0:max(X), dnbinom(0:max(X),size=4,prob=0.4), col="red", type='b')
hist(Xtrain, breaks=0:max(X), freq=FALSE, right=FALSE)
points(0:max(X), dnbinom(0:max(X),size=1,prob=0.4), col="red", type='b')
hist(Xtest, breaks=0:max(X), freq=FALSE, right=FALSE)
points(0:max(X), dnbinom(0:max(X),size=3,prob=0.4), col="red", type='b')
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
prody <- (factorial(x)/factorial(x-k))*factorial(x+r-k-2)/factorial(x+r-1)
print(prody)
sum <- sum + prody*xprob
x <- x+1
}
return(sum)
}
p=0.3
r=4
hist(rnbinom(1000,r,p))
Ks <- 0:30
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=1,prob=p))
abline(0,1, col="red")
range(myDensies)
sum(myDensies)
myDens <- function(k,r, p) {
sum <- 0
xprob <- 1
x <- k
while (xprob > 1e-6) {
xprob <- dnbinom(x,size=r, prob=p)
prody <- (factorial(x)/factorial(x-k))*(r-1)*factorial(x+r-k-2)/factorial(x+r-1)
print(prody)
sum <- sum + prody*xprob
x <- x+1
}
return(sum)
}
p=0.3
r=4
hist(rnbinom(1000,r,p))
Ks <- 0:30
myDensies <- sapply(Ks, myDens, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=1,prob=p))
abline(0,1, col="red")
myDens2 <- function(k,r,p) {
sum=0
for (x in k:1000) {
sum = sum+choo(x+r-k-2,r-2)*(1-p)^2*p^k
}
}
myDens2 <- function(k,r,p) {
sum=0
for (x in k:1000) {
sum = sum+choo(x+r-k-2,r-2)*(1-p)^2*p^k
}
}
myDensies2 <- sapply(Ks, myDens2, r=r, p=p)
plot(myDensies, dnbinom(Ks,size=1,prob=p))
abline(0,1, col="red")
set.seed(2)
clusters.full <- kmeans(log(X+1), centers=2)$cluster
results.naive <- apply(X, 2, function(u) glm(u~clusters.full, family="poisson")$coefficients[2])
set.seed(1)
n <- 1000
p <- 200
X <- matrix(rpois(n*p, lambda=5), nrow=n)
set.seed(2)
clusters.full <- kmeans(log(X+1), centers=2)$cluster
results.naive <- apply(X, 2, function(u) glm(u~clusters.full, family="poisson")$coefficients[2])
head(results.naive)
set.seed(2)
clusters.full <- kmeans(log(X+1), centers=2)$cluster
results.naive <- apply(X, 2, function(u) glm(u~clusters.full, family="poisson")$coefficients[2,])
set.seed(1)
n <- 1000
p <- 200
X <- matrix(rpois(n*p, lambda=5), nrow=n)
results.naive <- apply(X, 2, function(u) summary(glm(u~clusters.full, family="poisson"))$coefficients[2,])
head(results.naive)
clusters.full <- kmeans(log(X+1), centers=2)$cluster
results.naive <- t(apply(X, 2, function(u) summary(glm(u~clusters.full, family="poisson"))$coefficients[2,]))
head(results.naive)
class(results.naive)
library(ggplot2)
ggplot(data=NULL, aes(sample=results.naive[,4]))+geom_qq(distribution="qunif")+geom_abline(col="red")
set.seed(2)
split <- countsplit(X, epsilon=0.5)
setwd("~/countsplit/vignettes")
devtools::load_all()
set.seed(2)
split <- countsplit(X, epsilon=0.5)
Xtrain <- split$train
Xtest <- split$test
names(split)
ggplot(data=NULL, aes(sample=results.countsplit[,4]))+geom_qq(distribution="qunif")+geom_abline(col="red")
clusters.train <- kmeans(log(Xtrain+1), centers=2)$cluster
results.countsplit <- t(apply(Xtest, 2, function(u) summary(glm(u~clusters.train, family="poisson"))$coefficients[2,]))
ggplot(data=NULL, aes(sample=results.countsplit[,4]))+geom_qq(distribution="qunif")+geom_abline(col="red")
head(results.countsplit)
clusters.train <- kmeans(log(Xtrain+1), centers=2)$cluster
results.countsplit <- t(apply(Xtest, 2, function(u) summary(glm(u~clusters.train, family="poisson"))$coefficients[2,]))
head(results.countsplit)
ggplot(data=NULL, aes(sample=results.countsplit[,4]))+geom_qq(distribution="qunif")+geom_abline(col="red")
?rpois
set.seed(1)
n <- 1000
p <- 200
true.clusters <- rbinom(n, size=1, prob=0.5)
Lambda <- matrix(5, nrow=n, ncol=p)
Lambda[true.clusters==1, 1:10] <- 10
X <-apply(Lambda,1:2,rpois,n=1)
head(X)
X[,1]
hist(X[,1])
hist(X[,11])
dim(X)
mean(X[,1])
mean(X[,11])
