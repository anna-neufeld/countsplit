studyRes <- data.frame("FDR" = c(studywiseFDRs2, studywiseFDRs3),
"power" = c(studywisePowers2, studywisePowers3,
"method"=c(rep("Method2", length(studywiseFDRs2)),rep("Method3", length(studywiseFDRs3))))
)
head(studyRes)
studyRes <- data.frame("FDR" = c(studywiseFDRs2, studywiseFDRs3),
"power" = c(studywisePowers2, studywisePowers3),
"method"=c(rep("Method2", length(studywiseFDRs2)),rep("Method3", length(studywiseFDRs3))))
ggplot(data=studyRes, aes(x=method, y=FDR))+geom_boxplot()+
abline(h=mean(studywiseFDRs2), col="green")+
abline(h=mean(studywiseFDRs3), col="red")
ggplot(data=studyRes, aes(x=method, y=FDR))+geom_boxplot()
ggplot(data=studyRes, aes(x=method, y=FDR))+geom_boxplot()+
abline(h=mean(studywiseFDRs2), col="green")+
abline(h=mean(studywiseFDRs3), col="red")
mean(studywiseFDRs2)
mean(studywiseFDRs3)
mean(studywisePowers1)
mean(studywisePowers2)
mean(studywisePowers3)
ggplot(data=studyRes, aes(x=method, y=FDR))+geom_boxplot()+
abline(h=mean(studywiseFDRs2), col="green")+
abline(h=mean(studywiseFDRs3), col="red")
ggplot(data=allRes, aes(x=method, y=FDR, fill=as.factor(pi0)))+geom_boxplot()+
geom_hline(yintercept=0.05, col="red")+theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
allRes %>% group_by(method, pi0) %>% summarize(mean(FDR))
allRes <- data.frame(pi0=NA, FDR=NA, method=NA)
for (pi in unique(pi0s)) {
groupGenes <- which(pi0s==pi)
groupWiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,groupGenes])/sum(rej.2[u,groupGenes]))
groupWiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,groupGenes])/sum(rej.3[u,groupGenes]))
groupWisePower2 <- sapply(1:S, function(u) sum(true.discs2[u,groupGenes])/sum(truths[u,]==0))
groupWisePower3 <- sapply(1:S, function(u) sum(true.discs3[u,groupGenes])/sum(truths[u,]==0))
groupWiseFDRs3[is.nan(groupWiseFDRs3)] <- 0
groupWiseFDRs2[is.nan(groupWiseFDRs2)] <- 0
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs2, power=groupWisePower2, method="Method2"))
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs3, power=groupwisePower3, method="Method3"))
}
allRes <- data.frame(pi0=NA, FDR=NA, power=NA, method=NA)
for (pi in unique(pi0s)) {
groupGenes <- which(pi0s==pi)
groupWiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,groupGenes])/sum(rej.2[u,groupGenes]))
groupWiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,groupGenes])/sum(rej.3[u,groupGenes]))
groupWisePower2 <- sapply(1:S, function(u) sum(true.discs2[u,groupGenes])/sum(truths[u,]==0))
groupWisePower3 <- sapply(1:S, function(u) sum(true.discs3[u,groupGenes])/sum(truths[u,]==0))
groupWiseFDRs3[is.nan(groupWiseFDRs3)] <- 0
groupWiseFDRs2[is.nan(groupWiseFDRs2)] <- 0
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs2, power=groupWisePower2, method="Method2"))
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs3, power=groupwisePower3, method="Method3"))
}
allRes <- data.frame(pi0=NA, FDR=NA, power=NA, method=NA)
for (pi in unique(pi0s)) {
groupGenes <- which(pi0s==pi)
groupWiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,groupGenes])/sum(rej.2[u,groupGenes]))
groupWiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,groupGenes])/sum(rej.3[u,groupGenes]))
groupWisePower2 <- sapply(1:S, function(u) sum(true.discs2[u,groupGenes])/sum(truths[u,]==0))
groupWisePower3 <- sapply(1:S, function(u) sum(true.discs3[u,groupGenes])/sum(truths[u,]==0))
groupWiseFDRs3[is.nan(groupWiseFDRs3)] <- 0
groupWiseFDRs2[is.nan(groupWiseFDRs2)] <- 0
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs2, power=groupWisePower2, method="Method2"))
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs3, power=groupWisePower3, method="Method3"))
}
allRes <- allRes[-1,]
studyRes <- data.frame("FDR" = c(studywiseFDRs2, studywiseFDRs3),
"power" = c(studywisePowers2, studywisePowers3),
"method"=c(rep("Method2", length(studywiseFDRs2)),rep("Method3", length(studywiseFDRs3))))
mean(studywiseFDRs2)
mean(studywiseFDRs3)
mean(studywisePowers2)
mean(studywisePowers3)
allRes %>% group_by(method, pi0) %>% summarize(mean(FDR))
ggplot(data=allRes, aes(x=method, y=FDR, fill=as.factor(pi0)))+geom_boxplot()+
geom_hline(yintercept=0.05, col="red")+theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
allRes %>% group_by(method, pi0) %>% summarize(mean(FDR), mean(power))
allRes <- data.frame(pi0=NA, FDR=NA, power=NA, method=NA)
for (pi in unique(pi0s)) {
groupGenes <- which(pi0s==pi)
groupWiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,groupGenes])/sum(rej.2[u,groupGenes]))
groupWiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,groupGenes])/sum(rej.3[u,groupGenes]))
groupWisePower2 <- sapply(1:S, function(u) sum(true.discs2[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWisePower3 <- sapply(1:S, function(u) sum(true.discs3[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWiseFDRs3[is.nan(groupWiseFDRs3)] <- 0
groupWiseFDRs2[is.nan(groupWiseFDRs2)] <- 0
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs2, power=groupWisePower2, method="Method2"))
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs3, power=groupWisePower3, method="Method3"))
}
allRes <- allRes[-1,]
studyRes <- data.frame("FDR" = c(studywiseFDRs2, studywiseFDRs3),
"power" = c(studywisePowers2, studywisePowers3),
"method"=c(rep("Method2", length(studywiseFDRs2)),rep("Method3", length(studywiseFDRs3))))
mean(studywiseFDRs2)
mean(studywiseFDRs3)
mean(studywisePowers2)
mean(studywisePowers3)
allRes %>% group_by(method, pi0) %>% summarize(mean(FDR), mean(power))
ggplot(data=allRes, aes(x=method, y=FDR, fill=as.factor(pi0)))+geom_boxplot()+
geom_hline(yintercept=0.05, col="red")+theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
G <- 500
n <- 100
S <- 5000
set.seed(1)
pi0s <- rep(c(0.2,0.8), each=G/2)
pvals <- matrix(0, nrow=S, ncol=G)
truths <- matrix(0, nrow=S, ncol=G)
for (s in 1:S) {
set.seed(s)
if (s%%100==0) {print(s)}
### This is equal to 1 if the null is TRUE.
H0s <- rbinom(G, 1, pi0s)
betas <- rep(0, G)
betas[H0s==0] <- 0.3
c <- sample(c(0,1), size=n, replace=T)
X <- sapply(1:G, function(u) rnorm(n, mean=c*betas[u], sd=1))
pvals[s,]<- apply(X,2,function(u) t.test(u~c)$p.value)
truths[s,] <- H0s
}
qval.2 <- t(sapply(1:S, function(u) p.adjust(pi0s*pvals[u,], method="BH")))
rej.2 <-  qval.2< 0.05
pi0bar.oracle <- mean(pi0s)
weights.oracle <- (1-pi0bar.oracle)*pi0s/(1-pi0s)
qval.3 <- t(sapply(1:S, function(u) p.adjust(weights.oracle*pvals[u,], method="BH")))
rej.3<-  qval.3 < 0.05
false.discs2 <- (truths==1 & rej.2 ==1)
true.discs2 <- (truths==0 & rej.2 ==1)
false.discs3 <- (truths==1 & rej.3 ==1)
true.discs3 <- (truths==0 & rej.3 ==1)
studywiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,])/sum(rej.2[u,]))
studywiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,])/sum(rej.3[u,]))
studywisePowers2 <- sapply(1:S, function(u) sum(true.discs2[u,])/sum(truths[u,]==0))
studywisePowers3 <- sapply(1:S, function(u) sum(true.discs3[u,])/sum(truths[u,]==0))
allRes <- data.frame(pi0=NA, FDR=NA, power=NA, method=NA)
for (pi in unique(pi0s)) {
groupGenes <- which(pi0s==pi)
groupWiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,groupGenes])/sum(rej.2[u,groupGenes]))
groupWiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,groupGenes])/sum(rej.3[u,groupGenes]))
groupWisePower2 <- sapply(1:S, function(u) sum(true.discs2[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWisePower3 <- sapply(1:S, function(u) sum(true.discs3[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWiseFDRs3[is.nan(groupWiseFDRs3)] <- 0
groupWiseFDRs2[is.nan(groupWiseFDRs2)] <- 0
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs2, power=groupWisePower2, method="Method2"))
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs3, power=groupWisePower3, method="Method3"))
}
allRes <- allRes[-1,]
studyRes <- data.frame("FDR" = c(studywiseFDRs2, studywiseFDRs3),
"power" = c(studywisePowers2, studywisePowers3),
"method"=c(rep("Method2", length(studywiseFDRs2)),rep("Method3", length(studywiseFDRs3))))
mean(studywiseFDRs2)
mean(studywiseFDRs3)
mean(studywisePowers2)
mean(studywisePowers3)
allRes %>% group_by(method, pi0) %>% summarize(mean(FDR), mean(power))
G <- 800
n <- 100
S <- 1000
set.seed(1)
pi0s <- rep(c(0.2,0.8), each=G/2)
pvals <- matrix(0, nrow=S, ncol=G)
truths <- matrix(0, nrow=S, ncol=G)
for (s in 1:S) {
set.seed(s)
if (s%%100==0) {print(s)}
### This is equal to 1 if the null is TRUE.
H0s <- rbinom(G, 1, pi0s)
betas <- rep(0, G)
betas[H0s==0] <- 0.5
c <- sample(c(0,1), size=n, replace=T)
X <- sapply(1:G, function(u) rnorm(n, mean=c*betas[u], sd=1))
pvals[s,]<- apply(X,2,function(u) t.test(u~c)$p.value)
truths[s,] <- H0s
}
qval.2 <- t(sapply(1:S, function(u) p.adjust(pi0s*pvals[u,], method="BH")))
rej.2 <-  qval.2< 0.05
pi0bar.oracle <- mean(pi0s)
weights.oracle <- (1-pi0bar.oracle)*pi0s/(1-pi0s)
qval.3 <- t(sapply(1:S, function(u) p.adjust(weights.oracle*pvals[u,], method="BH")))
rej.3<-  qval.3 < 0.05
false.discs2 <- (truths==1 & rej.2 ==1)
true.discs2 <- (truths==0 & rej.2 ==1)
false.discs3 <- (truths==1 & rej.3 ==1)
true.discs3 <- (truths==0 & rej.3 ==1)
studywiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,])/sum(rej.2[u,]))
studywiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,])/sum(rej.3[u,]))
studywisePowers2 <- sapply(1:S, function(u) sum(true.discs2[u,])/sum(truths[u,]==0))
studywisePowers3 <- sapply(1:S, function(u) sum(true.discs3[u,])/sum(truths[u,]==0))
allRes <- data.frame(pi0=NA, FDR=NA, power=NA, method=NA)
for (pi in unique(pi0s)) {
groupGenes <- which(pi0s==pi)
groupWiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,groupGenes])/sum(rej.2[u,groupGenes]))
groupWiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,groupGenes])/sum(rej.3[u,groupGenes]))
groupWisePower2 <- sapply(1:S, function(u) sum(true.discs2[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWisePower3 <- sapply(1:S, function(u) sum(true.discs3[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWiseFDRs3[is.nan(groupWiseFDRs3)] <- 0
groupWiseFDRs2[is.nan(groupWiseFDRs2)] <- 0
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs2, power=groupWisePower2, method="Method2"))
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs3, power=groupWisePower3, method="Method3"))
}
allRes <- allRes[-1,]
studyRes <- data.frame("FDR" = c(studywiseFDRs2, studywiseFDRs3),
"power" = c(studywisePowers2, studywisePowers3),
"method"=c(rep("Method2", length(studywiseFDRs2)),rep("Method3", length(studywiseFDRs3))))
mean(studywiseFDRs2)
mean(studywiseFDRs3)
mean(studywisePowers2)
mean(studywisePowers3)
allRes %>% group_by(method, pi0) %>% summarize(mean(FDR), mean(power))
G <- 800
n <- 100
S <- 1000
set.seed(1)
pi0s <- rep(c(0.1,0.9), each=G/2)
pvals <- matrix(0, nrow=S, ncol=G)
truths <- matrix(0, nrow=S, ncol=G)
for (s in 1:S) {
set.seed(s)
if (s%%100==0) {print(s)}
### This is equal to 1 if the null is TRUE.
H0s <- rbinom(G, 1, pi0s)
betas <- rep(0, G)
betas[H0s==0] <- 0.5
c <- sample(c(0,1), size=n, replace=T)
X <- sapply(1:G, function(u) rnorm(n, mean=c*betas[u], sd=1))
pvals[s,]<- apply(X,2,function(u) t.test(u~c)$p.value)
truths[s,] <- H0s
}
qval.2 <- t(sapply(1:S, function(u) p.adjust(pi0s*pvals[u,], method="BH")))
rej.2 <-  qval.2< 0.05
pi0bar.oracle <- mean(pi0s)
weights.oracle <- (1-pi0bar.oracle)*pi0s/(1-pi0s)
qval.3 <- t(sapply(1:S, function(u) p.adjust(weights.oracle*pvals[u,], method="BH")))
rej.3<-  qval.3 < 0.05
false.discs2 <- (truths==1 & rej.2 ==1)
true.discs2 <- (truths==0 & rej.2 ==1)
false.discs3 <- (truths==1 & rej.3 ==1)
true.discs3 <- (truths==0 & rej.3 ==1)
studywiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,])/sum(rej.2[u,]))
studywiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,])/sum(rej.3[u,]))
studywisePowers2 <- sapply(1:S, function(u) sum(true.discs2[u,])/sum(truths[u,]==0))
studywisePowers3 <- sapply(1:S, function(u) sum(true.discs3[u,])/sum(truths[u,]==0))
allRes <- data.frame(pi0=NA, FDR=NA, power=NA, method=NA)
for (pi in unique(pi0s)) {
groupGenes <- which(pi0s==pi)
groupWiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,groupGenes])/sum(rej.2[u,groupGenes]))
groupWiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,groupGenes])/sum(rej.3[u,groupGenes]))
groupWisePower2 <- sapply(1:S, function(u) sum(true.discs2[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWisePower3 <- sapply(1:S, function(u) sum(true.discs3[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWiseFDRs3[is.nan(groupWiseFDRs3)] <- 0
groupWiseFDRs2[is.nan(groupWiseFDRs2)] <- 0
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs2, power=groupWisePower2, method="Method2"))
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs3, power=groupWisePower3, method="Method3"))
}
allRes <- allRes[-1,]
studyRes <- data.frame("FDR" = c(studywiseFDRs2, studywiseFDRs3),
"power" = c(studywisePowers2, studywisePowers3),
"method"=c(rep("Method2", length(studywiseFDRs2)),rep("Method3", length(studywiseFDRs3))))
qval.2 <- t(sapply(1:S, function(u) p.adjust(pi0s*pvals[u,], method="BH")))
rej.2 <-  qval.2< 0.05
pi0bar.oracle <- mean(pi0s)
weights.oracle <- (1-pi0bar.oracle)*pi0s/(1-pi0s)
qval.3 <- t(sapply(1:S, function(u) p.adjust(weights.oracle*pvals[u,], method="BH")))
rej.3<-  qval.3 < 0.05
qval.BL <-  t(sapply(1:S, function(u) p.adjust(pvals[u,], method="BH")*pi0s))
rej.BL <- qval.BL < 0.05
all.equal(qval.2, qval.BL)
table(qval.2==qval.BL)
qval.2 <- t(sapply(1:S, function(u) p.adjust(pi0s*pvals[u,], method="BH")))
rej.2 <-  qval.2< 0.05
pi0bar.oracle <- mean(pi0s)
weights.oracle <- (1-pi0bar.oracle)*pi0s/(1-pi0s)
qval.3 <- t(sapply(1:S, function(u) p.adjust(weights.oracle*pvals[u,], method="BH")))
rej.3<-  qval.3 < 0.05
qval.BL <-  t(sapply(1:S, function(u) p.adjust(pvals[u,], method="BH")*pi0s))
rej.BL <- qval.BL < 0.05
false.discs2 <- (truths==1 & rej.2 ==1)
true.discs2 <- (truths==0 & rej.2 ==1)
false.discs3 <- (truths==1 & rej.3 ==1)
true.discs3 <- (truths==0 & rej.3 ==1)
false.discs.BL <- (truths==1 & rej.BL ==1)
true.discs.BL <- (truths==0 & rej.BL ==1)
studywiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,])/sum(rej.2[u,]))
studywiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,])/sum(rej.3[u,]))
studywisePowers2 <- sapply(1:S, function(u) sum(true.discs2[u,])/sum(truths[u,]==0))
studywisePowers3 <- sapply(1:S, function(u) sum(true.discs3[u,])/sum(truths[u,]==0))
studywisePowersBL <- sapply(1:S, function(u) sum(true.discs.BL[u,])/sum(truths[u,]==0))
studywisePowersBL <- sapply(1:S, function(u) sum(true.discs.BL[u,])/sum(truths[u,]==0))
qval.2 <- t(sapply(1:S, function(u) p.adjust(pi0s*pvals[u,], method="BH")))
rej.2 <-  qval.2< 0.05
pi0bar.oracle <- mean(pi0s)
weights.oracle <- (1-pi0bar.oracle)*pi0s/(1-pi0s)
qval.3 <- t(sapply(1:S, function(u) p.adjust(weights.oracle*pvals[u,], method="BH")))
rej.3<-  qval.3 < 0.05
qval.BL <-  t(sapply(1:S, function(u) p.adjust(pvals[u,], method="BH")*pi0s))
rej.BL <- qval.BL < 0.05
false.discs2 <- (truths==1 & rej.2 ==1)
true.discs2 <- (truths==0 & rej.2 ==1)
false.discs3 <- (truths==1 & rej.3 ==1)
true.discs3 <- (truths==0 & rej.3 ==1)
false.discs.BL <- (truths==1 & rej.BL ==1)
true.discs.BL <- (truths==0 & rej.BL ==1)
studywiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,])/sum(rej.2[u,]))
studywiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,])/sum(rej.3[u,]))
studywisePowers2 <- sapply(1:S, function(u) sum(true.discs2[u,])/sum(truths[u,]==0))
studywisePowers3 <- sapply(1:S, function(u) sum(true.discs3[u,])/sum(truths[u,]==0))
studywisePowersBL <- sapply(1:S, function(u) sum(true.discs.BL[u,])/sum(truths[u,]==0))
studywisePowersBL <- sapply(1:S, function(u) sum(true.discs.BL[u,])/sum(truths[u,]==0))
allRes <- data.frame(pi0=NA, FDR=NA, power=NA, method=NA)
for (pi in unique(pi0s)) {
groupGenes <- which(pi0s==pi)
groupWiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,groupGenes])/sum(rej.2[u,groupGenes]))
groupWiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,groupGenes])/sum(rej.3[u,groupGenes]))
groupWiseFDRBL <- sapply(1:S, function(u) sum(false.discs.BL[u,groupGenes])/sum(rej.BL[u,groupGenes]))
groupWisePower2 <- sapply(1:S, function(u) sum(true.discs2[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWisePower3 <- sapply(1:S, function(u) sum(true.discs3[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWisePowerBL <- sapply(1:S, function(u) sum(true.discsBL[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWiseFDRs3[is.nan(groupWiseFDRs3)] <- 0
groupWiseFDRs2[is.nan(groupWiseFDRs2)] <- 0
groupWiseFDRBL[is.nan(groupWiseFDRBL)] <- 0
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs2, power=groupWisePower2, method="Method2"))
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs3, power=groupWisePower3, method="Method3"))
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRBL, power=groupWisePowerBL, method="MethodBL"))
}
allRes <- data.frame(pi0=NA, FDR=NA, power=NA, method=NA)
for (pi in unique(pi0s)) {
groupGenes <- which(pi0s==pi)
groupWiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,groupGenes])/sum(rej.2[u,groupGenes]))
groupWiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,groupGenes])/sum(rej.3[u,groupGenes]))
groupWiseFDRBL <- sapply(1:S, function(u) sum(false.discs.BL[u,groupGenes])/sum(rej.BL[u,groupGenes]))
groupWisePower2 <- sapply(1:S, function(u) sum(true.discs2[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWisePower3 <- sapply(1:S, function(u) sum(true.discs3[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWisePowerBL <- sapply(1:S, function(u) sum(true.discs.BL[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWiseFDRs3[is.nan(groupWiseFDRs3)] <- 0
groupWiseFDRs2[is.nan(groupWiseFDRs2)] <- 0
groupWiseFDRBL[is.nan(groupWiseFDRBL)] <- 0
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs2, power=groupWisePower2, method="Method2"))
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs3, power=groupWisePower3, method="Method3"))
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRBL, power=groupWisePowerBL, method="MethodBL"))
}
allRes <- allRes[-1,]
studyRes <- data.frame("FDR" = c(studywiseFDRs2, studywiseFDRs3),
"power" = c(studywisePowers2, studywisePowers3),
"method"=c(rep("Method2", length(studywiseFDRs2)),rep("Method3", length(studywiseFDRs3))))
mean(studywiseFDRs2)
mean(studywiseFDRs3)
mean(studywisePowers2)
mean(studywiseFDRsBL)
mean(studywiseFDRBL)
studywiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,])/sum(rej.2[u,]))
studywiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,])/sum(rej.3[u,]))
studywiseFDRsBL <- sapply(1:S, function(u) sum(false.discs.BL[u,])/sum(rej.BL[u,]))
mean(studywiseFDRs2)
mean(studywiseFDRs3)
mean(studywiseFDRsBL)
mean(studywisePowersBL)
mean(studywisePowers2)
mean(studywisePowers3)
mean(studywisePowersBL)
studywiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,])/sum(rej.2[u,]))
studywiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,])/sum(rej.3[u,]))
studywiseFDRsBL <- sapply(1:S, function(u) sum(false.discs.BL[u,])/sum(rej.BL[u,]))
allRes %>% group_by(method, pi0) %>% summarize(mean(FDR), mean(power))
ggplot(data=allRes, aes(x=method, y=FDR, fill=as.factor(pi0)))+geom_boxplot()+
geom_hline(yintercept=0.05, col="red")+theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data=allRes, aes(x=method, y=FDR, fill=as.factor(pi0)))+geom_boxplot()+
geom_hline(yintercept=0.05, col="red")+theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
allRes %>% group_by(method, pi0) %>% summarize(mean(FDR), mean(power))
G <- 800
n <- 100
S <- 1000
set.seed(1)
pi0s <- rep(c(0.1,0.3,0.5,0.7,0.9), each=G/5)
pvals <- matrix(0, nrow=S, ncol=G)
truths <- matrix(0, nrow=S, ncol=G)
for (s in 1:S) {
set.seed(s)
if (s%%100==0) {print(s)}
### This is equal to 1 if the null is TRUE.
H0s <- rbinom(G, 1, pi0s)
betas <- rep(0, G)
betas[H0s==0] <- 0.5
c <- sample(c(0,1), size=n, replace=T)
X <- sapply(1:G, function(u) rnorm(n, mean=c*betas[u], sd=1))
pvals[s,]<- apply(X,2,function(u) t.test(u~c)$p.value)
truths[s,] <- H0s
}
G <- 500
n <- 100
S <- 1000
set.seed(1)
pi0s <- rep(c(0.1,0.3,0.5,0.7,0.9), each=G/5)
pvals <- matrix(0, nrow=S, ncol=G)
truths <- matrix(0, nrow=S, ncol=G)
for (s in 1:S) {
set.seed(s)
if (s%%100==0) {print(s)}
### This is equal to 1 if the null is TRUE.
H0s <- rbinom(G, 1, pi0s)
betas <- rep(0, G)
betas[H0s==0] <- 0.5
c <- sample(c(0,1), size=n, replace=T)
X <- sapply(1:G, function(u) rnorm(n, mean=c*betas[u], sd=1))
pvals[s,]<- apply(X,2,function(u) t.test(u~c)$p.value)
truths[s,] <- H0s
}
qval.2 <- t(sapply(1:S, function(u) p.adjust(pi0s*pvals[u,], method="BH")))
rej.2 <-  qval.2< 0.05
pi0bar.oracle <- mean(pi0s)
weights.oracle <- (1-pi0bar.oracle)*pi0s/(1-pi0s)
qval.3 <- t(sapply(1:S, function(u) p.adjust(weights.oracle*pvals[u,], method="BH")))
rej.3<-  qval.3 < 0.05
qval.BL <-  t(sapply(1:S, function(u) p.adjust(pvals[u,], method="BH")*pi0s))
rej.BL <- qval.BL < 0.05
false.discs2 <- (truths==1 & rej.2 ==1)
true.discs2 <- (truths==0 & rej.2 ==1)
false.discs3 <- (truths==1 & rej.3 ==1)
true.discs3 <- (truths==0 & rej.3 ==1)
false.discs.BL <- (truths==1 & rej.BL ==1)
true.discs.BL <- (truths==0 & rej.BL ==1)
studywiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,])/sum(rej.2[u,]))
studywiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,])/sum(rej.3[u,]))
studywiseFDRsBL <- sapply(1:S, function(u) sum(false.discs.BL[u,])/sum(rej.BL[u,]))
studywisePowers2 <- sapply(1:S, function(u) sum(true.discs2[u,])/sum(truths[u,]==0))
studywisePowers3 <- sapply(1:S, function(u) sum(true.discs3[u,])/sum(truths[u,]==0))
studywisePowersBL <- sapply(1:S, function(u) sum(true.discs.BL[u,])/sum(truths[u,]==0))
allRes <- data.frame(pi0=NA, FDR=NA, power=NA, method=NA)
for (pi in unique(pi0s)) {
groupGenes <- which(pi0s==pi)
groupWiseFDRs2 <- sapply(1:S, function(u) sum(false.discs2[u,groupGenes])/sum(rej.2[u,groupGenes]))
groupWiseFDRs3 <- sapply(1:S, function(u) sum(false.discs3[u,groupGenes])/sum(rej.3[u,groupGenes]))
groupWiseFDRBL <- sapply(1:S, function(u) sum(false.discs.BL[u,groupGenes])/sum(rej.BL[u,groupGenes]))
groupWisePower2 <- sapply(1:S, function(u) sum(true.discs2[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWisePower3 <- sapply(1:S, function(u) sum(true.discs3[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWisePowerBL <- sapply(1:S, function(u) sum(true.discs.BL[u,groupGenes])/sum(truths[u,groupGenes]==0))
groupWiseFDRs3[is.nan(groupWiseFDRs3)] <- 0
groupWiseFDRs2[is.nan(groupWiseFDRs2)] <- 0
groupWiseFDRBL[is.nan(groupWiseFDRBL)] <- 0
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs2, power=groupWisePower2, method="Method2"))
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRs3, power=groupWisePower3, method="Method3"))
allRes <- rbind(allRes, data.frame(pi0= pi, FDR = groupWiseFDRBL, power=groupWisePowerBL, method="MethodBL"))
}
allRes <- allRes[-1,]
studyRes <- data.frame("FDR" = c(studywiseFDRs2, studywiseFDRs3),
"power" = c(studywisePowers2, studywisePowers3),
"method"=c(rep("Method2", length(studywiseFDRs2)),rep("Method3", length(studywiseFDRs3))))
mean(studywiseFDRs2)
mean(studywiseFDRs3)
mean(studywiseFDRsBL)
mean(studywisePowers2)
mean(studywisePowers3)
mean(studywisePowersBL)
allRes %>% group_by(method, pi0) %>% summarize(mean(FDR), mean(power))
devtools::install_github("metacran/cranlogs")
cran_downloads(when = "last-week", packages = c("countsplit", "splinetree"))
library(cranlogs)
cran_downloads(when = "last-week", packages = c("countsplit", "splinetree"))
cran_downloads(when = "ever", packages = c("countsplit", "splinetree"))
cran_downloads(when = "last-month", packages = c("countsplit", "splinetree"))
cran_downloads(when = "last-month", packages = c("countsplit"))
cran_downloads(when = "last-month", packages = c("splinetree"))
pvals.good <- runif(1000)
pvals.bad <- rbeta(1000,1,1)
hist(pvals.bad)
pvals.bad <- rbeta(1000,0.5,1)
hist(pvals.bad)
ggplot(data=NULL)+
geom_qq(aes(sample=pvals.good, col="good"), distribution="qunif")+
geom_qq(aes(sample=pvals.bad, col="bad"), distribution="qunif")+
geom_abline()
library(tidyverse)
ggplot(data=NULL)+
geom_qq(aes(sample=pvals.good, col="good"), distribution="qunif")+
geom_qq(aes(sample=pvals.bad, col="bad"), distribution="qunif")+
geom_abline()
?geom_qq
ggplot(data=NULL)+
geom_qq(aes(sample=pvals.good, col="good"),distribution="qunif")+
geom_qq(aes(sample=pvals.bad, col="bad"), distribution="qunif")+
geom_abline()
?geom_qq
ggplot(data=NULL)+
geom_qq(aes(sample=pvals.good, col="good"),distribution=stats::qunif)+
geom_qq(aes(sample=pvals.bad, col="bad"), distribution=stats::qunif)+
geom_abline()
ggplot(data=NULL)+
geom_qq(aes(sample=pvals.good, col="good"),distribution=qunif)+
geom_qq(aes(sample=pvals.bad, col="bad"), distribution=qunif)+
geom_abline()
plot(x=sort(runif(1000)), y=sort(pvals.good), col="red")
points(x=sort(runif(1000)), y=sort(pvals.good), col="blue")
length(5)
setwd("~/countsplit/tests/testthat")
devtools::load_all()
try1 <- countsplit(X, epsilon=0.5)
class(try1)
try1 <- try(countsplit(X, epsilon=0.5))
n <- 50
p <- 20
X <- matrix(rpois(n*p, lambda=3), nrow=n)
try1 <- try(countsplit(X, epsilon=0.5))
class(try1)
try1 <- try(countsplit(X, epsilon=c(-0.2, 1.2)))
expect_equal(class(try1), "try-error")
class(try1)
try1 <- try(countsplit(X, epsilon=c(0.5, 1.5)))
expect_equal(class(try1), "try-error")
devtools::test()
devtools::test()
devtools::check()
usethis::use_version('patch')
